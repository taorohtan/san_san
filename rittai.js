/*---------------iOSの場合は，マウスイベントをタッチイベントに変更することmousedown --> touchstartmousemove --> touchmovemouseup   --> touchend or touchevent以前の注意書き-----030422-----以下の関数を実装function disp()引数:a, b, c, l, m, n, k, p引数：kigo[面or辺],垂直-0:平行-1, 面-0:辺-1, ab, bc, cd, da, データ数)データがない場合は　,"", としておくfunction msg_mm()引数:a, b, cfunction msg_ans()引数:l, m, n, k, p入力条件の構成//-----条件の入力（ex.面（あ）平行面）	if(nyj==1){		kj[nk]=num;		nk++;		if(nk>3){kkj=kj[1]+kj[2]+kj[3];}	}//----------------------------------------function cuboid()解答表示のときに直方体見取り図を示す0307_22◯垂直・平行　面・辺　後から選択でも表示可能◯function ten_key() 内に	bgcolor_btm();	を記述しておく　→　テンキー繰り替えし上書きの防止0312_22◯オープニングの見取図もかくれている辺は破線で表示0609_23==========[◯]を押下したとき，オリジナルの立体を表示・非表示を切り替える	if (num==5){		if(opj==0){bgcolor();ten_key();opning();kk=kkmem;ap=kkmem;opj=1;}//kk=0;}		else{kk=kkmem;opj=0;ap=kkmem-1;num=1}		}		*kk ap を保持することで解答画面を再表示◯function ten_key_basyo() 内に以下を追加	*解答表示の初期化	if((mx>35 && mx<440)&&(my>260 && my<320)){kkmem=0}                                              ^^^^^^^^◯平行な辺を表示するときに元の辺を黒色表示にしておくための処理	if(kk>=p+1){hen(l,1);hen(m,1);hen(n,1);if(k==""){hen(a,0)}else{hen(k,1)};kk=0;}                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^----------------*/// ----------------タッチイベントが利用可能かの判別-------------------------var supportTouch = 'ontouchend' in document;// イベント名var E_TOUCHSTART = supportTouch ? 'touchstart' : 'mousedown';var E_TOUCHMOVE = supportTouch ? 'touchmove' : 'mousemove';var E_TOUCHEND = supportTouch ? 'touchend' : 'mouseup';//=====================================================================function draw(id) {    var canvas = document.getElementById(id);    if (canvas == null)    	return false;		var context = canvas.getContext('2d');		var mx;var my;var bx;var by;var num;var kk;kk=-1;var kkj;kkj="あ";//---初期化var kj=[];	kj[1]="zr";var nyj;nyj=0;var kigo=[];var nk;//---入力個数（あ垂直辺）nk=0;var opmen;var vvp;//---問題表示・垂直平行判断var ssl;//---問題表示・面辺判断vvp=2;ssl=2;var opj;//---◯押下チェックopj=0;kigo["あ"]="面（あ）";kigo["い"]="面（い）";kigo["う"]="面（う）";kigo["え"]="面（え）";kigo["お"]="面（お）";kigo["か"]="面（か）";kigo["ab"]="辺 AB";kigo["bc"]="辺 BC";kigo["cd"]="辺 CD";kigo["da"]="辺 DA";kigo["ef"]="辺 EF";kigo["fg"]="辺 FG";kigo["gh"]="辺 GH";kigo["he"]="辺 HE";kigo["ae"]="辺 AE";kigo["bf"]="辺 BF";kigo["cg"]="辺 CG";kigo["dh"]="辺 DH";kigo["zr"]="（　　）";		bgcolor();		ten_key();		opning();function moji_zen(){moji("a");moji("b");moji("c");moji("d");moji("e");moji("f");moji("g");moji("h");}function opning(){moji_zen();moji_h("い");moji_h("え");moji_h("お");men("か",0);men("あ",0);men("う",0);					men(opmen,1);hen(opmen,0);cub_dash()}function moji(alf){		var alf;		context.fillStyle = 'blue';		context.font = "18px Arial";		if (alf=="a"){context.fillText("A",90,110);}		if (alf=="b"){context.fillText("B",290,110);}		if (alf=="c"){context.fillText("C",370,70);}		if (alf=="d"){context.fillText("D",170,70);}		if (alf=="e"){context.fillText("E",90,245);}		if (alf=="f"){context.fillText("F",290,245);}		if (alf=="g"){context.fillText("G",370,180);}		if (alf=="h"){context.fillText("H",190,170);}}//---面の名前（あ）（い）（う）...function moji_h(hira){		var hira;		context.fillStyle = 'blue';		context.font = "14px Arial";		if (hira=="あ"){context.fillText("（あ）",200,110);}		if (hira=="う"){context.fillText("（う）",310,150);}		if (hira=="か"){context.fillText("（か）",200,170);}		context.fillStyle = 'red';		context.font = "14px Arial";		if (hira=="い"){context.fillText("（い）",240,200);}		if (hira=="え"){context.fillText("（え）",250,100);}		if (hira=="お"){context.fillText("（お）",130,150);}}//-----面描画　ff は 0 -> わくだけ: 1 -> 塗りつぶすfunction men(st,ff){		var st;		var ff;		//context.strokeStyle="black";		if (st=="あ"){			context.beginPath();    		context.moveTo(120,120);    		context.lineTo(180,80);    		context.lineTo(360,80);			context.lineTo(300,120);    		context.lineTo(120,120);			if (ff==0){    			context.closePath();				context.strokeStyle="blue";				context.stroke();			} else {				context.fillStyle='rgba(0, 255, 0, 0.5)'				context.fill();			}			moji_h(st);		}		if (st=="い"){			context.beginPath();    		context.moveTo(120,220);    		context.lineTo(180,180);    		context.lineTo(360,180);			context.lineTo(300,220);    		context.lineTo(120,220);			if (ff==0){    			context.closePath();				context.strokeStyle="blue";				context.stroke();			} else {				context.fillStyle='rgba(0, 255, 0, 0.5)'				context.fill();			}			moji_h(st);		}		if (st=="う"){			context.beginPath();    		context.moveTo(300,220);    		context.lineTo(300,120);    		context.lineTo(360,80);			context.lineTo(360,180);    		context.lineTo(300,220);			if (ff==0){    			context.closePath();				context.strokeStyle="blue";				context.stroke();			} else {				context.fillStyle='rgba(0, 255, 0, 0.5)'				context.fill();			}			moji_h(st);		}		if (st=="え"){			context.beginPath();    		context.moveTo(180,180);    		context.lineTo(180,80);    		context.lineTo(360,80);			context.lineTo(360,180);    		context.lineTo(180,180);			if (ff==0){    			context.closePath();				context.strokeStyle="blue";				context.stroke();			} else {				context.fillStyle='rgba(0, 255, 0, 0.5)'				context.fill();			}			moji_h(st);		}		if (st=="お"){			context.beginPath();    		context.moveTo(120,220);    		context.lineTo(120,120);    		context.lineTo(180,80);			context.lineTo(180,180);    		context.lineTo(120,220);			if (ff==0){    			context.closePath();				context.strokeStyle="blue";				context.stroke();			} else {				context.fillStyle='rgba(0, 255, 0, 0.5)'				context.fill();			}			moji_h(st);		}		if (st=="か"){			context.beginPath();    		context.moveTo(120,220);    		context.lineTo(120,120);    		context.lineTo(300,120);			context.lineTo(300,220);    		context.lineTo(120,220);			if (ff==0){    			context.closePath();				context.strokeStyle="blue";				context.stroke();			} else {				context.fillStyle='rgba(0, 255, 0, 0.5)'				context.fill();			}			moji_h(st);		}}//-----実線にもどすfunction rline(){		context.beginPath();		context.setLineDash([]);		context.closePath();}//-----立方体見取り図のみfunction cuboid(){		var cc;		cc="rgba(125,125,125,0.5)";				//context.beginPath();		context.setLineDash([5, 5]);		context.moveTo(120,220);		context.lineTo(180,180);		context.lineTo(360,180);		//context.closePath();		context.strokeStyle=cc;		context.stroke();				//context.beginPath();		context.setLineDash([5, 5]);		context.moveTo(180,80);		context.lineTo(180,180);		//context.closePath();		context.strokeStyle=cc;		context.stroke();				context.beginPath();		context.setLineDash([]);		context.moveTo(120,120);		context.lineTo(180,80);		context.lineTo(360,80);		context.lineTo(300,120);		context.lineTo(120,120);		context.closePath();		context.strokeStyle=cc;		context.stroke();				context.beginPath();		context.moveTo(120,220);		context.lineTo(120,120);		context.lineTo(300,120);		context.lineTo(300,220);		context.lineTo(120,220);		context.closePath();		context.strokeStyle=cc;		context.stroke();				context.beginPath();		context.moveTo(300,220);		context.lineTo(300,120);		context.lineTo(360,80);		context.lineTo(360,180);		context.lineTo(300,220);		context.closePath();		context.strokeStyle=cc;		context.stroke();		}//-----破線のみの表示function cub_dash(){		var cc;		cc="rgba(0,0,255,1)";		//context.beginPath();		context.setLineDash([5, 5]);		context.moveTo(120,220);		context.lineTo(180,180);		context.lineTo(360,180);		//context.closePath();		context.strokeStyle=cc;		context.stroke();				//context.beginPath();		context.setLineDash([5, 5]);		context.moveTo(180,80);		context.lineTo(180,180);		//context.closePath();		context.strokeStyle=cc;		context.stroke();				rline();}//-----辺　pp -> 頂点入力 : c -> 0:黒　1:赤function hen(pp,c){	var pp;	var c;	if (pp=="ab"){context.beginPath();context.moveTo(120,120);context.lineTo(300,120);moji("a");moji("b");}	if (pp=="bc"){context.beginPath();context.moveTo(300,120);context.lineTo(360, 80);moji("b");moji("c");}	if (pp=="cd"){context.beginPath();context.moveTo(360, 80);context.lineTo(180, 80);moji("c");moji("d");}	if (pp=="da"){context.beginPath();context.moveTo(180, 80);context.lineTo(120,120);moji("d");moji("a");}	if (pp=="ef"){context.beginPath();context.moveTo(120,220);context.lineTo(300,220);moji("e");moji("f");}	if (pp=="fg"){context.beginPath();context.moveTo(300,220);context.lineTo(360,180);moji("f");moji("g");}	if (pp=="gh"){context.beginPath();context.moveTo(360,180);context.lineTo(180,180);moji("g");moji("h");}	if (pp=="he"){context.beginPath();context.moveTo(180,180);context.lineTo(120,220);moji("h");moji("e");}	if (pp=="ae"){context.beginPath();context.moveTo(120,120);context.lineTo(120,220);moji("a");moji("e");}	if (pp=="bf"){context.beginPath();context.moveTo(300,120);context.lineTo(300,220);moji("b");moji("f");}	if (pp=="cg"){context.beginPath();context.moveTo(360, 80);context.lineTo(360,180);moji("c");moji("g");}	if (pp=="dh"){context.beginPath();context.moveTo(180, 80);context.lineTo(180,180);moji("d");moji("h");}		context.closePath();	if (c==0){		context.strokeStyle='black'		context.stroke();	} else {				context.strokeStyle='red'		context.stroke();	}}//-----提示ファンクション-----function disp(a,b,c,l,m,n,k,p){	var a;var b;var c;	var l;var m;var n;var k;	var p;	msg_mm(a,b,c);		men(a,1);	men(a,0);	hen(a,0);		if (c==0) {		if(kk==1){men(l,1);}		if(kk==2){men(m,1);}		if(kk==3){men(n,1);}		if(kk==4){men(k,1);}		if(kk>=p+1){men(l,1);men(m,1);men(n,1);men(k,1);kk=0;}		} else {		if(kk==1){hen(l,1);}		if(kk==2){hen(m,1);}		if(kk==3){hen(n,1);}		if(kk==4){hen(k,1);}		if(kk>=p+1){hen(l,1);hen(m,1);hen(n,1);if(k==""){hen(a,0)}else{hen(k,1)};kk=0;}	}	msg_ans(l,m,n,k,p);}//-----提示ファンクション終了-----function msg01(){		context.fillStyle = 'blue';		context.font = "32px Arial";		context.fillText("[ S ] でスタート！", 35,200);}function msg_mm(a,b,c){		var vp=[];		var sl=[];		//vp[0]="垂直";vp[1]="平行";sl[0]="面";sl[1]="辺";vp[2]="（ ）";sl[2]="（ ）";		vp[0]="垂直";vp[1]="平行";sl[0]="面";sl[1]="辺";vp[2]="［　］";sl[2]="［　］";				var a;var b;var c;var s;				s=kigo[a]+"　に　"+vp[b]+"　な　"+sl[c]+"　は";				context.fillStyle = 'blue';		context.font = "18px Arial";		context.fillText( s, 100,40);		context.fillStyle='rgba(255, 0, 0, 0.1)'		//context.strokeRect(80,18,300,30);		context.fillRect(80,18,300,30);}var ap;ap=1;function msg_ans(l,m,n,k,p){		var l;var m;var n;var k;var p;		context.fillStyle = 'blue';		context.font = "18px Arial";				if(kk==1||ap==p){if(l==""){}else{context.fillText(kigo[l],410,40);}}		if(kk==2||ap==p){if(m==""){}else{context.fillText(kigo[m],410,70);}}		if(kk==3||ap==p){if(n==""){}else{context.fillText(kigo[n],410,100);}}		if(kk==4||ap==p){if(k==""){}else{context.fillText(kigo[k],410,130);}}		if(ap<p+1){ap++;}else{ap=1;}}//----------------	function bgcolor(){		context.fillStyle='#ffffe0'//'rgba(0, 255, 0, 0.5)'		context.fillRect(0,0,500,320);	}		function bgcolor_btm(){		context.fillStyle='#ffffe0'//'rgba(0, 255, 0, 0.5)'		context.fillRect(0,260,500,320);	}	//-----テンキー押下時の着色関数/*	function ten_color(){		context.fillStyle='rgba(0, 255, 0, 0.5)';		if((mx>0 && mx<500) && (my>260 && my<320)){			if ((mx>35 && mx<340) && (my>290 && my<320)){				fillRoundRect(context, bx, by, 23, 28, 5);			} else {				fillRoundRect(context, bx, by, 46, 28, 5);			}			//---以下で0.5秒( 500 )まち色づけをなくす			setTimeout(function(){ten_key();},500);		}	}*/	function ten_key(){		var i;		var j;		bgcolor_btm();		for(i=0; i<13; i++){				context.fillStyle='#afeeee';				fillRoundRect(context,　10+i*25,290, 23, 28, 5);		}		context.fillStyle='#afeeee';		fillRoundRect(context,　10,260, 23, 28, 5);		for(i=0; i<6; i++){				context.fillStyle='#afeeee'				fillRoundRect(context,　35+i*50,260, 46, 28, 5);		}				for(i=0; i<3; i++){			for(j=0; j<2; j++){				context.fillStyle='rgba(255, 125, 0, 0.3)';//'#afeeee'				fillRoundRect(context,　340+i*50,260+j*30, 46, 28, 5);			}		}				//-----キー表示-----		context.fillStyle = 'blue';		context.font = "14px Arial";		context.fillText("(あ)",48,278);		context.fillText("(い)",48+50,278);		context.fillText("(う)",48+2*50,278);		context.fillText("(え)",48+3*50,278);		context.fillText("(お)",48+4*50,278);		context.fillText("(か)",48+5*50,278);		context.font = "12px Arial";		context.fillText("面",38-25,278);		context.fillText("辺",38-25,308);		context.fillText("AB",38,308);		context.fillText("BC",38+25,308);		context.fillText("CD",38+2*25,308);		context.fillText("DA",38+3*25,308);		context.fillText("EF",38+4*25,308);		context.fillText("FG",38+5*25,308);		context.fillText("GH",38+6*25,308);		context.fillText("HE",38+7*25,308);		context.fillText("AE",38+8*25,308);		context.fillText("BF",38+9*25,308);		context.fillText("CG",38+10*25,308);		context.fillText("DH",38+11*25,308);		context.font = "14px Arial";		context.fillText("垂直",48+50+5*50,280);		context.fillText("面",48+55+6*50,280);		context.fillText("◯",48+55+7*50,280);		context.fillText("平行",48+50+5*50,308);		context.fillText("辺",48+55+6*50,308);		context.fillText("A",50+55+7*50,308);	}	function ten_key_basyo(){	if((mx>10 && mx<500) && (my>260 && my<320)){	//if((mx>35 && mx<500) && (my>260 && my<320)){//-----面・辺	//if((mx>13 && mx<35) && (my>260 && my<320)){num="";nyj=1;kj[1]="";kj[2]="";kj[3]="";nk=0;ap=0;bgcolor();}	if((mx>35 && mx<440)&&(my>260 && my<320)){kkmem=0}		if((mx>10 && mx<33) && (my>260 && my<320)){num=0;}	//-----面あ〜か	if((mx>35 && mx<85) && (my>260 && my<290)){num="あ";bx=35;by=260;kj[1]="あ";}	if((mx>85 && mx<135) && (my>260 && my<290)){num="い";bx=85;by=260;kj[1]="い";}	if((mx>135 && mx<185) && (my>260 && my<290)){num="う";bx=135;by=260;kj[1]="う";}	if((mx>185 && mx<235) && (my>260 && my<290)){num="え";bx=185;by=260;kj[1]="え";}	if((mx>235 && mx<285) && (my>260 && my<290)){num="お";bx=235;by=260;kj[1]="お";}	if((mx>285 && mx<335) && (my>260 && my<290)){num="か";bx=285;by=260;kj[1]="か";}//-----辺AB〜12本分	//if((mx>10 && mx<35)&&(my>290 && my<320)){num=1;bx=10;by=290;}	if((mx>35 && mx<60)&&(my>290 && my<320)){num="ab";bx=35;by=290;kj[1]="ab";}	if((mx>60 && mx<85)&&(my>290 && my<320)){num="bc";bx=60;by=290;kj[1]="bc";}	if((mx>85 && mx<110)&&(my>290 && my<320)){num="cd";bx=85;by=290;kj[1]="cd";}	if((mx>110 && mx<135)&&(my>290 && my<320)){num="da";bx=110;by=290;kj[1]="da";}	if((mx>135 && mx<160)&&(my>290 && my<320)){num="ef";bx=135;by=290;kj[1]="ef";}	if((mx>160 && mx<185)&&(my>290 && my<320)){num="fg";bx=160;by=290;kj[1]="fg";}	if((mx>185 && mx<210)&&(my>290 && my<320)){num="gh";bx=185;by=290;kj[1]="gh";}	if((mx>210 && mx<235)&&(my>290 && my<320)){num="he";bx=210;by=290;kj[1]="he";}	if((mx>235 && mx<260)&&(my>290 && my<320)){num="ae";bx=235;by=290;kj[1]="ae";}	if((mx>260 && mx<285)&&(my>290 && my<320)){num="bf";bx=260;by=290;kj[1]="bf";}	if((mx>285 && mx<310)&&(my>290 && my<320)){num="cg";bx=285;by=290;kj[1]="cg";}	if((mx>310 && mx<335)&&(my>290 && my<320)){num="dh";bx=310;by=290;kj[1]="dh";}	if((mx>340 && mx<390)&&(my>260 && my<290)){num="垂直";bx=340;by=260;kk=0;ap=0;kj[2]="垂直";vvp=0;}	if((mx>390 && mx<440)&&(my>260 && my<290)){num="面";bx=390;by=260;kk=0;ap=0;kj[3]="面";ssl=0;}	if((mx>440 && mx<490)&&(my>260 && my<290)){num=5;bx=440;by=260;kk=0;ap=0;}	if((mx>340 && mx<390)&&(my>290 && my<320)){num="平行";bx=340;by=290;kk=0;ap=0;kj[2]="平行";vvp=1;}	if((mx>390 && mx<440)&&(my>290 && my<320)){num="辺";bx=390;by=290;kk=0;ap=0;kj[3]="辺";ssl=1;}	if((mx>440 && mx<490)&&(my>290 && my<320)){num=1;bx=440;by=290;}	if(num==1){kk++;kkmem=kk;}//-----条件入力・表示-----bgcolor();cuboid();msg_mm(kj[1],vvp,ssl);kkj=kj[1]+kj[2]+kj[3];opmen=kj[1];//----条件判断文字列ex.あ垂直面men(opmen,1);hen(opmen,0);//-----条件入力・表示-----//---------------------------------------------------------------------//console.log(nyj+num+"  "+kkj)//-----入力（ここで作業）----------------------------------------------------------------	if (num==5){		if(opj==0){bgcolor();ten_key();opning();kk=kkmem;ap=kkmem;opj=1;msg_mm(kj[1],vvp,ssl)}		else{kk=kkmem;opj=0;ap=kkmem-1;num=1}		}	if (num==0){opmen="";vvp=2,ssl=2;bgcolor();ten_key();opning();}	if (num==1){bgcolor();ten_key();	//ten_color();	cuboid();	if(kkj=="あ垂直面"){disp("あ",0,0,"う","え","お","か",4);}	if(kkj=="あ垂直辺"){disp("あ",0,1,"ae","bf","cg","dh",4);}	if(kkj=="い垂直面"){disp("い",0,0,"う","え","お","か",4);}	if(kkj=="い垂直辺"){disp("い",0,1,"ae","bf","cg","dh",4);}	if(kkj=="う垂直面"){disp("う",0,0,"い","え","あ","か",4);}	if(kkj=="う垂直辺"){disp("う",0,1,"ab","ef","gh","cd",4);}	if(kkj=="え垂直面"){disp("え",0,0,"あ","い","う","お",4);}	if(kkj=="え垂直辺"){disp("え",0,1,"da","bc","fg","he",4);}	if(kkj=="お垂直面"){disp("お",0,0,"い","え","あ","か",4);}	if(kkj=="お垂直辺"){disp("お",0,1,"ab","ef","gh","cd",4);}	if(kkj=="か垂直面"){disp("か",0,0,"あ","い","う","お",4);}	if(kkj=="か垂直辺"){disp("か",0,1,"da","bc","fg","he",4);}		if(kkj=="あ平行面"){disp("あ",1,0,"い","","","",1);}	if(kkj=="あ平行辺"){disp("あ",1,1,"ef","fg","gh","he",4);}	if(kkj=="い平行面"){disp("い",1,0,"あ","","","",1);}	if(kkj=="い平行辺"){disp("い",1,1,"ab","bc","cd","da",4);}	if(kkj=="う平行面"){disp("う",1,0,"お","","","",1);}	if(kkj=="う平行辺"){disp("う",1,1,"dh","da","ae","he",4);}	if(kkj=="え平行面"){disp("え",1,0,"か","","","",1);}	if(kkj=="え平行辺"){disp("え",1,1,"ab","ae","ef","bf",4);}	if(kkj=="お平行面"){disp("お",1,0,"う","","","",1);}	if(kkj=="お平行辺"){disp("お",1,1,"bf","fg","cg","bc",4);}	if(kkj=="か平行面"){disp("か",1,0,"え","","","",1);}	if(kkj=="か平行辺"){disp("か",1,1,"cd","dh","gh","cg",4);}	if(kkj=="ab垂直面"){disp("ab",0,0,"う","お","","",2);}	if(kkj=="ab垂直辺"){disp("ab",0,1,"ae","da","bc","bf",4);}	if(kkj=="bc垂直面"){disp("bc",0,0,"え","か","","",2);}	if(kkj=="bc垂直辺"){disp("bc",0,1,"ab","bf","cd","cg",4);}	if(kkj=="cd垂直面"){disp("cd",0,0,"お","う","","",2);}	if(kkj=="cd垂直辺"){disp("cd",0,1,"bc","cg","da","dh",4);}	if(kkj=="da垂直面"){disp("da",0,0,"え","か","","",2);}	if(kkj=="da垂直辺"){disp("da",0,1,"ab","ae","cd","dh",4);}	if(kkj=="ef垂直面"){disp("ef",0,0,"お","う","","",2);}	if(kkj=="ef垂直辺"){disp("ef",0,1,"ae","he","bf","fg",4);}	if(kkj=="fg垂直面"){disp("fg",0,0,"え","か","","",2);}	if(kkj=="fg垂直辺"){disp("fg",0,1,"bf","ef","cg","gh",4);}	if(kkj=="gh垂直面"){disp("gh",0,0,"う","お","","",2);}	if(kkj=="gh垂直辺"){disp("gh",0,1,"dh","he","cg","fg",4);}	if(kkj=="he垂直面"){disp("he",0,0,"え","か","","",2);}	if(kkj=="he垂直辺"){disp("he",0,1,"ae","ef","dh","gh",4);}	if(kkj=="ae垂直面"){disp("ae",0,0,"あ","い","","",2);}	if(kkj=="ae垂直辺"){disp("ae",0,1,"ab","da","ef","he",4);}	if(kkj=="bf垂直面"){disp("bf",0,0,"あ","い","","",2);}	if(kkj=="bf垂直辺"){disp("bf",0,1,"ab","bc","ef","fg",4);}	if(kkj=="cg垂直面"){disp("cg",0,0,"あ","い","","",2);}	if(kkj=="cg垂直辺"){disp("cg",0,1,"bc","cd","fg","gh",4);}	if(kkj=="dh垂直面"){disp("dh",0,0,"あ","い","","",2);}	if(kkj=="dh垂直辺"){disp("dh",0,1,"da","cd","he","gh",4);}	if(kkj=="ab平行面"){disp("ab",1,0,"い","え","","",2);}	if(kkj=="ab平行辺"){disp("ab",1,1,"ef","gh","cd","",3);}	if(kkj=="bc平行面"){disp("bc",1,0,"い","お","","",2);}	if(kkj=="bc平行辺"){disp("bc",1,1,"da","he","fg","",3);}	if(kkj=="cd平行面"){disp("cd",1,0,"い","か","","",2);}	if(kkj=="cd平行辺"){disp("cd",1,1,"ab","ef","gh","",3);}	if(kkj=="da平行面"){disp("da",1,0,"う","い","","",2);}	if(kkj=="da平行辺"){disp("da",1,1,"he","fg","bc","",3);}	if(kkj=="ef平行面"){disp("ef",1,0,"え","あ","","",2);}	if(kkj=="ef平行辺"){disp("ef",1,1,"ab","cd","gh","",3);}	if(kkj=="fg平行面"){disp("fg",1,0,"お","あ","","",2);}	if(kkj=="fg平行辺"){disp("fg",1,1,"bc","da","he","",3);}	if(kkj=="gh平行面"){disp("gh",1,0,"あ","か","","",2);}	if(kkj=="gh平行辺"){disp("gh",1,1,"cd","ab","ef","",3);}	if(kkj=="he平行面"){disp("he",1,0,"う","あ","","",2);}	if(kkj=="he平行辺"){disp("he",1,1,"da","bc","fg","",3);}	if(kkj=="ae平行面"){disp("ae",1,0,"う","え","","",2);}	if(kkj=="ae平行辺"){disp("ae",1,1,"bf","cg","dh","",3);}	if(kkj=="bf平行面"){disp("bf",1,0,"お","え","","",2);}	if(kkj=="bf平行辺"){disp("bf",1,1,"ae","dh","cg","",3);}	if(kkj=="cg平行面"){disp("cg",1,0,"お","か","","",2);}	if(kkj=="cg平行辺"){disp("cg",1,1,"bf","ae","dh","",3);}	if(kkj=="dh平行面"){disp("dh",1,0,"う","か","","",2);}	if(kkj=="dh平行辺"){disp("dh",1,1,"ae","bf","cg","",3);}	} else {			}	bgcolor_btm();//-----テンキー部分の表示をその都度更新	ten_key();//-----テンキー部分の表示をその都度更新	//-----入力----------------------------------------------------------------------------	}}//------マル四角を描画するfunction-----//------https://qiita.com/PG0721/items/6fb9e9c02675be832402---よりfunction fillRoundRect(context, x, y, w, h, r) {    createRoundRectPath(context, x, y, w, h, r);    context.fill();}function createRoundRectPath(context, x, y, w, h, r) {    context.beginPath();    context.moveTo(x + r, y);    context.lineTo(x + w - r, y);    context.arc(x + w - r, y + r, r, Math.PI * (3/2), 0, false);    context.lineTo(x + w, y + h - r);    context.arc(x + w - r, y + h - r, r, 0, Math.PI * (1/2), false);    context.lineTo(x + r, y + h);           context.arc(x + r, y + h - r, r, Math.PI * (1/2), Math.PI, false);    context.lineTo(x, y + r);    context.arc(x + r, y + r, r, Math.PI, Math.PI * (3/2), false);    context.closePath();}//------マル四角を描画するfunctionここまで-----//----Canvas全体をクリアするfunctionfunction cls(){	context.clearRect(0,0,canvas.width,canvas.height);}//-----ここからマウスの位置を取得するcanvas.addEventListener(E_TOUCHSTART, onTouchStart);	function onTouchStart(e) {	canvas.addEventListener(E_TOUCHMOVE, onTouchMove);	canvas.addEventListener(E_TOUCHEND, onTouchEnd);}function onTouchMove(e) {	//cls();}function onTouchEnd(e) {	canvas.removeEventListener(E_TOUCHMOVE, onTouchMove);	canvas.removeEventListener(E_TOUCHEND, onTouchEnd);	ten_key();	mx=e.pageX;	my=e.pageY;	//console.log("x= "+mx+" : y= "+my+" bx= "+bx+" : by= "+by)//------コンソールに座標を表示	ten_key_basyo();	}//	}	//----ここまで// デフォルトのイベントを禁止	document.ontouchmove = function(evt){	evt.preventDefault();	}}