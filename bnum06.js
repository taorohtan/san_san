// ----------------タッチイベントが利用可能かの判別-------------------------var supportTouch = 'ontouchend' in document;// イベント名var E_TOUCHSTART = supportTouch ? 'touchstart' : 'mousedown';var E_TOUCHMOVE = supportTouch ? 'touchmove' : 'mousemove';var E_TOUCHEND = supportTouch ? 'touchend' : 'mouseup';//=====================================================================function draw(id) {    var canvas = document.getElementById(id);    if (canvas == null)    	return false;		var context = canvas.getContext('2d');var mx;var my;var i;var j;var kno2=[];var ranjj;//乱数発生をするかしないかの判断var nyjj=0;//最初の入力判定var num;//ten_key入力の値var kkm;//位の番号var pp=[];var ran=[];var tran;//---解答判定用（数字）var tran2;//---解答判定用（位）var kran=[];var knum=[];var jjrnd;var k;var dam;var no;//---乱数の配列var bnum;//---n桁の数字（問題）var mv=0;var kotae;	kotae=0;var bmoji;var monjj;//---数・位の選択	monjj=0;var kkjj;	kkjj=1;var mndno;//---問題番号//	mndno=0;var mkosu=8;//---問題数const pinp = new Audio('pinpon.mp3');const bu = new Audio("bubu.mp3");var timerID;var tmdt;//時間データ	tmdt=20;	bgcolor();iniset();kansj();ten_key();//-----main()function main(){	bgcolor();	iniset();	ten_key();	ten_key_basyo();	kansj();				select();}//------main()//=====number ↓function iniset(){//-----桁枠表示	context.strokeStyle = "blue";	for (i=0; i<8; i++){	if (i<4) {		if (kkjj==1){context.strokeRect(40+54*i,10,54,75);}				else{context.strokeRect(40+54*i,10,54,100);}		} else {		context.strokeRect(40+54*i,10,54,100);		}	}	if(kkjj==1){		context.moveTo(40,60);		context.lineTo(472,60);		context.stroke();		//if(kkjj==1){context.fillStyle = 'rgba(255, 255, 255, 0.3)'context.fillRect(40,60,54,50/2);context.fillRect(40+4*54,60,54,50);context.fillStyle = 'rgba(0, 0, 255, 0.3)'context.fillRect(94,60,54,50/2);context.fillRect(94+4*54,60,54,50);context.fillStyle = 'rgba(255, 255, 0, 0.3)'context.fillRect(148,60,54,50/2);context.fillRect(148+4*54,60,54,50);context.fillStyle = 'rgba(255, 0, 0, 0.3)'context.fillRect(202,60,54,50/2);context.fillRect(202+4*54,60,54,50);//if(kkjj==1){		context.fillStyle = 'blue';		context.font = "20px Arial";		context.fillText("千",60,80);		context.fillText("百",114,80);		context.fillText("十",168,80);		context.fillText("一",222,80);		context.fillText("千",276,80);		context.fillText("百",330,80);		context.fillText("十",384,80);		context.fillText("一",438,80);		context.fillText("万",222,105);}else{context.fillStyle = 'rgba(255, 0, 0, 0.3)'context.fillRect(256,85,216,25)context.strokeStyle = "blue";context.strokeRect(256, 85, 216,25);}context.fillStyle = 'rgba(0, 255, 0, 0.3)'context.fillRect(40,85,216,25)context.strokeStyle = "blue";context.strokeRect(40, 85, 216,25);}function kazu(){	//bnum=ran[0]*10000000+ran[1]*1000000+ran[2]*100000+ran[3]*10000+ran[4]*100+ran[5]*100+ran[6]*10+ran[7];	for (i=0; i<8; i++) bnum=bnum+ran[i]**(7-i);}function kansj(){		knum[0]="千万";		knum[1]="百万";		knum[2]="十万";		knum[3]="一万";		knum[4]="千";		knum[5]="百";		knum[6]="十";		knum[7]="一";}function wketa(){//-----位の枠の中に表示する		context.fillStyle = 'blue';		context.font = "30px Arial";		context.fillText(ran[0],60,50);		context.fillText(ran[1],114,50);		context.fillText(ran[2],168,50);		context.fillText(ran[3],222,50);		context.fillText(ran[4],276,50);		context.fillText(ran[5],330,50);		context.fillText(ran[6],384,50);		context.fillText(ran[7],438,50);				kekka();}//=====numberfunction random(){//-----kno2[0]=Math.floor(Math.random() * 8)  ;k=1;while(k<8){	jjrnd=0;	dam=Math.floor(Math.random() * 8) ;	for (i=0; i<k; i++){if (kno2[i]==dam){jjrnd=1;}}	if (jjrnd==1) { } else {kno2[i]=dam; k++;}	}//-----ran[0]=Math.floor(Math.random() * 9) + 1 ;k=1;while(k<=8){	jjrnd=0;	dam=Math.floor(Math.random() * 9) //+ 1 ;	for (i=0; i<k; i++){if (ran[i]==dam){jjrnd=1;}}	if (jjrnd==1) { } else {ran[i]=dam; k++;}	}		ranjj=1;}function pinbu (a,b){	var a;	var b;	if (a==0) {		pinp.volume = b;		pinp.play();		} else {		bu.volume = b;		bu.play();		}}function gset(){		bgcolor();		iniset();		ten_key();		wketa();}function mondai(){			kotae=0;				if(ranjj==0) random();			kazu();			tran=ran[kno2[mndno]];			tran2=knum[kno2[mndno]]+"の位";			mv=0;						timerID = window.setInterval(				function(){				nyjj=1;				gset();				context.fillStyle = 'red';				if (monjj==0){					if (mv<250){context.font ="69px Arial";context.fillText(tran, 150+mv,210);}else{}					}				if (monjj==1){					if (mv<200){context.font ="28px Arial";context.fillText(tran2, 150+mv,180);}else{}					}				mv=mv+1;								if(mv>350){					gset();					}				}, tmdt);//20);}function hantei(){if (nyjj==0){}else{		var hh;				if(monjj==0){ hh=ran[kkm];}		if(monjj==1){ hh=num;}		if ( tran == hh ){				pinbu(0,0.5);				mndno=mndno+1;				if (mndno < mkosu ) mondai();		}				clearInterval( timerID );//連続すると加速してしまうので		mv=0;}}function kekka(){		context.fillStyle = 'red';		context.font = "30px Arial"		for (i=0; i<mndno; i++){ context.fillText("◯",50+i*30, 250);}		if (mndno==mkosu){context.font = "60px Arial";context.fillText("OK!!",50+i*30, 250);tran="";tran2="";ranjj=0;}}//-----　← M A N 押下時の処理function select(){	if((mx>184 && mx<500) && (my>260 && my<320)){	//if((mx>410 && mx<500) && (my>260 && my<320)){		if(num==12){					ranjj=0;			nyjj=0;						mndno=0;			bgcolor();			iniset();			ten_key();			mondai();			ranjj=1;		}				if(num==11){monjj=0;tran="";tran2="";for(i=0; i<8; i++){ran[i]="";}mndno=0;}		if(num==13){monjj=1;tran="";tran2="";for(i=0; i<8; i++){ran[i]="";}mndno=0}				if(num==14){			if (kkjj==0) {kkjj=1;}else{kkjj=0;}			ranjj=0;			nyjj=0;			bgcolor();			iniset();			kansj();			ten_key();			kansj();			mndno=0;			tran="";tran2="";			for(i=0; i<8; i++){ran[i]="";}		}			}}//-----テンキー表示function ten_key(){		//bgcolor_btm();		context.fillStyle='#afeeee';		//fillRoundRect(context,　10,260, 23, 28, 5);		for(i=0; i<7; i++){			for(j=0; j<2; j++){				context.fillStyle='#afeeee'				fillRoundRect(context,　184+i*45,260+j*30, 43, 28, 5);				if (i<5){					context.fillStyle = 'blue';					context.font = "24px Arial";					if(j==0){context.fillText(i+1,194+4+i*45,24+260+j*28);}						else{if(i==4){context.fillText(i-4,194+4+i*45,24+260+j*28);}						else{context.fillText(i+6,194+4+i*45,24+260+j*28);}}					} else {}			}		}		if(monjj==0){context.fillStyle='rgba(255, 0, 0, 0.3)';fillRoundRect(context,　409, 260, 43, 28, 5);}		if(monjj==1){context.fillStyle='rgba(255, 0, 0, 0.3)';fillRoundRect(context,　409, 289, 43, 28, 5);}		if(kkjj==1){context.fillStyle='rgba(0, 255, 0, 0.3)';fillRoundRect(context,　454, 289, 43, 28, 5);}					context.fillStyle = 'blue';		context.font = "20px Arial";		context.fillText("位",194+5*45,24+260);		context.fillText("問",194+6*45,24+260);		context.fillText("数",194+5*45,24+260+28);		context.font = "18px Arial";		context.fillText("P",185+6*45+15,24+258+28);				//---位表示		for(i=0; i<4; i++){			for(j=0; j<2; j++){				context.fillStyle= 'rgba(0, 255, 0, 0.3)'//'#afeeee'				fillRoundRect(context,　4+i*45,260+j*30, 43, 28, 5);				if (i<4){					context.fillStyle = 'blue';					context.font = "18px Arial";					if(j==0){context.fillText(knum[i],8+i*45,24+260+j*28);}						else{if(i==4){context.fillText(i-4,194+4+i*45,24+260+j*28);}						else{context.fillText(knum[i+4],4+4+8+i*45,24+260+j*28);}}					} else {}			}		}		rline();}//-----テンキー押下時の値取得function ten_key_basyo(){	rline();//点線丸囲いが描かれてしまうので入れておく			if((mx>184 && mx<229) && (my>260 && my<290)){num=1;}	if((mx>229 && mx<274) && (my>260 && my<290)){num=2;}	if((mx>274 && mx<319) && (my>260 && my<290)){num=3;}	if((mx>319 && mx<360) && (my>260 && my<290)){num=4;}	if((mx>360 && mx<405) && (my>260 && my<290)){num=5;}		if((mx>405 && mx<450) && (my>260 && my<290)){num=11;}	if((mx>450 && mx<495) && (my>260 && my<290)){num=12;}		if((mx>184 && mx<229) && (my>290 && my<320)){num=6;}	if((mx>229 && mx<274) && (my>290 && my<320)){num=7;}	if((mx>274 && mx<319) && (my>290 && my<320)){num=8;}	if((mx>319 && mx<360) && (my>290 && my<320)){num=9;}	if((mx>360 && mx<405) && (my>290 && my<320)){num=0;}		if((mx>405 && mx<450) && (my>290 && my<320)){num=13;}	if((mx>450 && mx<495) && (my>290 && my<320)){num=14;}	//---位の選択	if((mx>4 && mx<49) && (my>260 && my<290)){kkm=0;}	if((mx>49 && mx<94) && (my>260 && my<290)){kkm=1;}	if((mx>94 && mx<138) && (my>260 && my<290)){kkm=2;}	if((mx>138 && mx<183) && (my>260 && my<290)){kkm=3;}		if((mx>4 && mx<49) && (my>290 && my<320)){kkm=4;}	if((mx>49 && mx<94) && (my>290 && my<320)){kkm=5;}	if((mx>94 && mx<138) && (my>290 && my<320)){kkm=6;}	if((mx>138 && mx<183) && (my>290 && my<320)){kkm=7;}hantei();nyjj=1;}//-----実線にもどすfunction rline(){		context.beginPath();		context.setLineDash([]);		context.closePath();}function bgcolor(){	context.fillStyle='#ffffe0'//'rgba(0, 255, 0, 0.5)'	context.fillRect(0,0,500,320);}function bgcolor_bm(){	context.fillStyle='#ffffe0'//'rgba(0, 255, 0, 0.5)'	context.fillRect(290,40,230,180);}//------マル四角を描画するfunction-----//------https://qiita.com/PG0721/items/6fb9e9c02675be832402---よりfunction fillRoundRect(context, x, y, w, h, r) {    createRoundRectPath(context, x, y, w, h, r);    context.fill();}function createRoundRectPath(context, x, y, w, h, r) {    context.beginPath();    context.moveTo(x + r, y);    context.lineTo(x + w - r, y);    context.arc(x + w - r, y + r, r, Math.PI * (3/2), 0, false);    context.lineTo(x + w, y + h - r);    context.arc(x + w - r, y + h - r, r, 0, Math.PI * (1/2), false);    context.lineTo(x + r, y + h);           context.arc(x + r, y + h - r, r, Math.PI * (1/2), Math.PI, false);    context.lineTo(x, y + r);    context.arc(x + r, y + r, r, Math.PI, Math.PI * (3/2), false);    context.closePath();}//------マル四角を描画するfunctionここまで-----//----Canvas全体をクリアするfunctionfunction cls(){	context.clearRect(0,0,canvas.width,canvas.height);}//-----ここからマウスの位置を取得するcanvas.addEventListener(E_TOUCHSTART, onTouchStart);	function onTouchStart(e) {	canvas.addEventListener(E_TOUCHMOVE, onTouchMove);	canvas.addEventListener(E_TOUCHEND, onTouchEnd);}function onTouchMove(e) {	//cls();}function onTouchEnd(e) {	canvas.removeEventListener(E_TOUCHMOVE, onTouchMove);	canvas.removeEventListener(E_TOUCHEND, onTouchEnd);	mx=e.pageX;	my=e.pageY;		main();	console.log("x= "+mx+" : y= "+my)//------コンソールに座標を表示//	console.log(mndno+"  "+tran)}// デフォルトのイベントを禁止	document.ontouchmove = function(evt){	evt.preventDefault();	}}//-------最終かっこ>>>function draw(id) { 