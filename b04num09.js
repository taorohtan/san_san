// ----------------タッチイベントが利用可能かの判別-------------------------var supportTouch = 'ontouchend' in document;// イベント名var E_TOUCHSTART = supportTouch ? 'touchstart' : 'mousedown';var E_TOUCHMOVE = supportTouch ? 'touchmove' : 'mousemove';var E_TOUCHEND = supportTouch ? 'touchend' : 'mouseup';//=====================================================================//---　数直線 --- メモリの高さに合わせて指示位置を表示//               数値の間も乱数で指定//=====================================================================function draw(id) {    var canvas = document.getElementById(id);    if (canvas == null)    	return false;		var context = canvas.getContext('2d');var mx;var my;var c;c=0;var i;var j;var p;//---乱数で作った問題5こ分のカウント用p=-1;var num;//ten_key入力の値var kkm;var mon;//入力された個数	mon=0;var bx;//-----ten_key押下時着色用座標var by;var mm=[];mm[0]="0";mm[1]="1";mm[2]="2";mm[3]="3";mm[4]="4";mm[5]="5";mm[6]="6";mm[7]="7";mm[8]="8";mm[9]="9";mm[16]="兆";mm[17]="億";mm[18]="万";var bmoji=[];var pp0=[]; var pp1=[]; var pp2=[];var kotae;var vw=0;//--------------------------var dys;//---数直線の分割数var dy;//---1めもりの幅（単位：億）var ly=120;//140;//---数直線--y座標var haba;//---キャンバス上の幅var stn;//---数直線左端値var edn;//---数直線右端値var md=[];//---表示値var stnr=[];var rgn=[];var rg1=[];var rg2=[];var rg3=[];var rg4=[];var dysn=[];var dysr=[];dysr[0]=10;dysr[1]=20;dysr[2]=20;dysr[3]=30;dysr[4]=30;var dyn=[];var dyr=[];//-----1めもりの幅（これをx億）dyr[0]=1;dyr[1]=10;dyr[2]=10;dyr[3]=100;dyr[4]=1000;//--------------------------var ch0=0; var ch1=0; var ch2=0;var chc0=0; var chc1=0; var chc2=0;var chk0=0; var chk1=0; var chk2=0;var chk;//解答番号 0...ひとめもり・1...（1）・2...(2)var jjrnd;var dam;var no;//---乱数の配列var bnum;//---n桁の数字（問題）const pinp = new Audio('pinpon.mp3');const bu = new Audio("bubu.mp3");bgcolor();ten_key();t_line(10,0);//-----main()function main(){	bgcolor();	ten_key();	ten_key_basyo();	nyuryoku();	select();		if(num==14 || typeof md[3] == "undefined"){t_line(10,0);}else{mondai();}	fig();}//------main()function random(){stnr[0]=Math.floor(Math.random() * 49) + 1 ;//-----数直線左端数値k=1;while(k<5){	jjrnd=0;	dam=Math.floor(Math.random() * 49) + 1;	for (i=0; i<k; i++){if (stnr[i]==dam){jjrnd=1;}}	if (jjrnd==1) { } else {stnr[i]=dam; k++;}	}rgn[0]=Math.floor(Math.random() * 5);k=1;while(k<5){	jjrnd=0;	dam=Math.floor(Math.random() * 5);	for (i=0; i<k; i++){if (rgn[i]==dam){jjrnd=1;}}	if (jjrnd==1) { } else {rgn[i]=dam; k++;}	}dysn[0]=Math.floor(Math.random() * 5);//-----数直線分割数k=1;while(k<5){	jjrnd=0;	dam=Math.floor(Math.random() * 5);	for (i=0; i<k; i++){if (dysn[i]==dam){jjrnd=1;}}	if (jjrnd==1) { } else {dysn[i]=dam; k++;}	}dyn[0]=Math.floor(Math.random() * 5);//-----1めもりの幅k=1;while(k<5){	jjrnd=0;	dam=Math.floor(Math.random() * 5);	for (i=0; i<k; i++){if (dyn[i]==dam){jjrnd=1;}}	if (jjrnd==1) { } else {dyn[i]=dam; k++;}	}	for (k=0; k<5; k++){//-----左端数値を100倍して変化をつける	dam=Math.floor(Math.random() * 2);	if(dyr[dyn[k]]<1000){if(dam>0){stnr[k]=stnr[k]*100}}}k=0;while(k<5){	rg3[k]=Math.floor(Math.random() * 3)+1;	rg4[k]=Math.floor(Math.random() * 2)+7;	k++;		}}function mondai(){//var d;		context.fillStyle = 'blue';		context.font = "20px Arial";		context.fillText("（"+c+"）",0, 25);		d=dysr[dysn[p]];		stn=stnr[p]*dyr[dyn[p]];dy=dyr[dyn[p]];		if((stn/dy)%5==0){md[0]=stn}else{md[0]=stn+(5-(stn/dy)%5)*dy}//-----md[0]		edn=stnr[p]*dyr[dyn[p]]+dy*d		if((edn/dy)%5==0){md[2]=edn}else{md[2]=edn-((edn/dy)%5)*dy}//-----md[2]		md[3]=stnr[p]*dyr[dyn[p]]+rg3[p]*dyr[dyn[p]]*dysr[dysn[p]]/10;		if(md[0]==md[3]){md[3]=md[3]+dy}else{md[3]=md[3]}//-----md[3]		md[4]=stnr[p]*dyr[dyn[p]]+rg4[p]*dyr[dyn[p]]*dysr[dysn[p]]/10;		if(md[2]==md[4]){md[4]=md[4]-dy}else{md[4]=md[4]}//-----md[4]	t_line(d,stnr[p]);	bmoji[0]=dyr[dyn[p]]+"億"			context.strokeStyle = 'blue';		context.fillStyle = 'blue';		context.font = "20px Arial";		context.fillText("ひとめもり",20,200);		context.fillText("(1)",20,235);		context.fillText("(2)",260,235);		if(chc0==1){context.strokeStyle = 'red';}context.strokeRect(130,175,180,30);context.strokeStyle = 'blue';		if(chc1==1){context.strokeStyle = 'red';}context.strokeRect(50,215,200,30);context.strokeStyle = 'blue';		if(chc2==1){context.strokeStyle = 'red';}context.strokeRect(290,215,200,30);context.strokeStyle = 'blue';//---bmojifor(i=3; i<5; i++){		if(md[i]<10000){		bmoji[i-2]=md[i]+"億";}		else{			if(Math.floor(md[i]%10000)==0){				bmoji[i-2]=Math.floor(md[i]/10000)+"兆";}				else{				bmoji[i-2]=Math.floor(md[i]/10000)+"兆"+md[i]%10000+"億";}			}			//kotae0=bmoji[2];			kotae0=bmoji[chk];	}//---bmoji//---数値表示for(i=0; i<3; i=i+2){		if(md[i]<10000){		context.fillStyle = 'blue';		context.font = "24px Arial";		context.fillText(md[i]+"億",60+i*140,ly-80);}		else{			context.fillStyle = 'blue';			context.font = "24px Arial";			if(Math.floor(md[i]%10000)==0){				context.fillText(Math.floor(md[i]/10000)+"兆",60+i*140,ly-80);}				else{context.fillText(Math.floor(md[i]/10000)+"兆"+md[i]%10000+"億",60+i*140,ly-80);}			}		cone(haba*(md[i]-stn)/dy+10,ly-80,i);	}	//---問題番号表示for(i=3; i<5; i++){		context.fillStyle = 'blue';		context.font = "22px Arial";		context.fillText("("+(i-2)+")",haba*(md[i]-stn)/dy-5,ly+40);		cone(haba*(md[i]-stn)/dy+10,ly+20,3);	}} function pinbu (a,b){	var a;	var b;	if (a==0) {		pinp.volume = b;		pinp.play();		} else {		bu.volume = b;		bu.play();		}}//-----数直線function t_line(x,s){	var bsu=x;//---分割数	haba=480/x;//---1めもりのドット幅	var i;	var j=s;		context.beginPath();	context.lineWidth = 2;//-----線の太さ	context.moveTo(10, ly);//190);	context.lineTo(490,ly);//190);	context.closePath();	context.strokeStyle='black'	context.stroke();		//for(i=0;i<25;i++){	for(i=0;i<bsu+1;i++){	context.beginPath();	if(j%5==0){		if(j%10==0){		context.moveTo(10+i*haba,ly-20);//180);		context.lineTo(10+i*haba,ly);//190);		}else{		//if (i==bsu/2){context.lineWidth=3;context.moveTo(10+i*haba,170);context.lineTo(10+i*haba,190);}		context.moveTo(10+i*haba,ly-12);//180);		context.lineTo(10+i*haba,ly);//190);		context.closePath();		}		} else {		context.lineWidth = 2;		context.moveTo(10+i*haba,ly-5);//185);		context.lineTo(10+i*haba,ly);//190);		context.closePath();		}	context.strokeStyle='black'	context.stroke();	j++;	}}function cone(x,y,z){	var x;	var y;	var z;		context.beginPath();	context.strokeStyle='red'	context.lineWidth = 1;//-----線の太さ	if(z==0){context.moveTo(60,y+5);context.lineTo(70,y+5);}//190);	if(z==1){context.moveTo(200,y+5);context.lineTo(210,y+5)}//190);	if(z==2){context.moveTo(340,y+5);context.lineTo(350,y+5)}//190);	//context.lineTo(x,ly-12);//190);	//===== メモリの高さに合わせて▽の指示高さを変える  =====	var p = md[i]/dy		if(p%5==0){		if(p%10==0){			context.lineTo(x,ly-20);			}else{			context.lineTo(x,ly-12);			}		} else {			context.lineTo(x,ly-5);		}		//=====   ↑   =====	if(z==3){		context.strokeStyle='blue';		context.moveTo(x,ly);context.lineTo(x-5,y);context.lineTo(x+5,y);context.fill();	}	context.closePath();	context.stroke();}//-----数値入力function nyuryoku(){		if((mx>49 && mx<410) && (my>260 && my<320)){			if(chc0==1){pp0[mon]=mm[num];}			if(chc1==1){pp1[mon]=mm[num];}			if(chc2==1){pp2[mon]=mm[num];}			if (mon<10){mon++;}//---10文字まで入力			//if (mon<bmoji.length + 4){mon++;}//---文字数分まで入力		}		//context.fillText(num,54+s1*20,250);}//-----数値入力表示function fig(){		var s1;		context.fillStyle = 'red';		context.font = "20px Arial";		for (s1=0; s1<mon; s1++){		//context.fillText(pp[s1],54+s1*23,240);//175-----ansx+s1*13,ansy);//---13は字間			if(chc0==1){context.fillText(pp0[s1],150+s1*23,200);}			if(chc1==1){context.fillText(pp1[s1],60+s1*23,240);}			if(chc2==1){context.fillText(pp2[s1],300+s1*23,240);}		}		if(chk0==1){context.fillText(bmoji[0],150,200);}		if(chk1==1){context.fillText(bmoji[1],60,240);}		if(chk2==1){context.fillText(bmoji[2],300,240);}}var r=0;//-----　← M A N 押下時の処理function select(){		if((mx>130 && mx<310)&&(my>175 && my<205)){ch0=1;chk=0;chc0=1;chc1=0;chc2=0;}		if((mx>50 && mx<230)&&(my>215 && my<245)){ch1=1;chk=1;chc0=0;chc1=1;chc2=0;}		if((mx>290 && mx<470)&&(my>215 && my<245)){ch2=1;chk=2;chc0=0;chc1=0;chc2=1;}//mx184	if((mx>49 && mx<500) && (my>260 && my<320)){		//if (r==0){random();r=1;}		if(num==12){			ch0=0;ch1=0;ch2=0;			chc0=0;chc1=0;chc2=0;			chk0=0;chk1=0;chk2=0;			c++;					    if(p>3){p=0;}else{p++;}						kotae=0;			mon=0;						if (p==0){random();}			mondai();		}		if(num==11){			if(mon>0){mon=mon-1;}		}				if(num==13){					mon=mon-1;			kotae="";				for (i=0; i<mon+1; i++){				if(chc0==1){kotae=kotae+pp0[i];}				if(chc1==1){kotae=kotae+pp1[i];}				if(chc2==1){kotae=kotae+pp2[i];}				}						if(kotae0 == kotae){				pinbu(0,0.5);				mon=mon+1;				context.fillStyle = 'red';				context.font = "96px Arial";				context.fillText("◯", 360,205);				if(chc0==1){chk0=1;mon=0;}				if(chc1==1){chk1=1;mon=0;}				if(chc2==1){chk2=1;mon=0;}							}else{mon=0;pinbu(1,0.5);}						rline();				}		if(num==14){//-----(1)			ch0=0;ch1=0;ch2=0;			chc0=0;chc1=0;chc2=0;			chk0=0;chk1=0;chk2=0;						mon=0;			c=0;		}	}}//-----テンキー表示function ten_key(){		//bgcolor_btm();		context.fillStyle='#afeeee';		for(i=0; i<7; i++){			for(j=0; j<2; j++){				context.fillStyle='#afeeee'				fillRoundRect(context,　184+i*45,260+j*30, 43, 28, 5);				if (i<5){					context.fillStyle = 'blue';					context.font = "24px Arial";					if(j==0){context.fillText(i+1,194+4+i*45,24+260+j*28);}						else{if(i==4){context.fillText(i-4,194+4+i*45,24+260+j*28);}						else{context.fillText(i+6,194+4+i*45,24+260+j*28);}}					} else {}			}		}				context.fillStyle = 'blue';		context.font = "20px Arial";		context.fillText("←",194+5*45,24+260);		context.fillText("問",194+6*45,24+260);		context.fillText("答",194+5*45,24+260+28);		context.font = "14px Arial";		context.fillText("（1）",185+6*45,24+260+28);				//---位表示		for(i=1; i<4; i++){		j=1;				context.fillStyle= 'rgba(0, 255, 0, 0.3)'//'#afeeee'		fillRoundRect(context,　4+i*45,260+j*30, 43, 28, 5);		context.fillStyle = 'blue';		context.font = "18px Arial";		context.fillText(mm[i+15],8+8+i*45,24+260+j*28);		}}//-----テンキー押下時の値取得function ten_key_basyo(){	rline();//点線丸囲いが描かれてしまうので入れておく		if((mx>184 && mx<229) && (my>260 && my<290)){num=1;}	if((mx>229 && mx<274) && (my>260 && my<290)){num=2;}	if((mx>274 && mx<319) && (my>260 && my<290)){num=3;}	if((mx>319 && mx<360) && (my>260 && my<290)){num=4;}	if((mx>360 && mx<405) && (my>260 && my<290)){num=5;}			if((mx>405 && mx<450) && (my>260 && my<290)){num=11;bx=409;by=260;ten_color()}	if((mx>450 && mx<495) && (my>260 && my<290)){num=12;bx=454;by=260;ten_color()}		if((mx>184 && mx<229) && (my>290 && my<320)){num=6;}	if((mx>229 && mx<274) && (my>290 && my<320)){num=7;}	if((mx>274 && mx<319) && (my>290 && my<320)){num=8;}	if((mx>319 && mx<360) && (my>290 && my<320)){num=9;}	if((mx>360 && mx<405) && (my>290 && my<320)){num=0;}		if((mx>405 && mx<450) && (my>290 && my<320)){num=13;bx=409;by=289;ten_color()}	if((mx>450 && mx<495) && (my>290 && my<320)){num=14;bx=454;by=289;ten_color()}	if((mx>49 && mx<94) && (my>290 && my<320)){num=16;}//"兆";}	if((mx>94 && mx<138) && (my>290 && my<320)){num=17;}//"億";}	if((mx>138 && mx<183) && (my>290 && my<320)){num=18;}//"万";}		if(num>0 && num<6){bx=184+45*(num-1);by=260;ten_color()}	if(num>5 && num<10){bx=184+45*(num-6);by=289;ten_color()}	if(num==0){bx=364;by=289;ten_color()}	if(num>15 && num<19){bx=4+45*(num-15);by=290;ten_color()}}function ten_color(){	if((mx>184 && mx<495) && (my>262 && my<320)||(mx>49 && mx<184) && (my>289 && my<320)) {		context.fillStyle='rgba(0, 255, 0, 0.5)';		fillRoundRect(context, bx, by, 43, 28, 5);		//---以下で0.3秒( 300 )まち色づけをなくす（もとの色で再描画 0〜9 ）		setTimeout(function(){				if((mx>184 && mx<495) && (my>262 && my<320)) {			context.fillStyle='#afeeee'			fillRoundRect(context, bx, by, 43, 28, 5);						context.fillStyle = 'blue';			context.font = "24px Arial";			context.fillText("0",112,488);			for(i=0; i<5; i++){				for(j=0; j<3; j++){					if(j==0){context.fillText(i+1,194+4+i*45,24+260+j*28);}						else{if(i==4){context.fillText(i-4,194+4+i*45,24+260+j*28);}						else{context.fillText(i+6,194+4+i*45,24+260+j*28);}}				}			}			context.fillStyle = 'blue';			context.font = "20px Arial";			context.fillText("←",194+5*45,24+260);			context.fillText("問",194+6*45,24+260);			context.fillText("答",194+5*45,24+260+28);			context.font = "14px Arial";			context.fillText("（1）",185+6*45,24+260+28);			}					if((mx>49 && mx<184) && (my>290 && my<320)){			context.fillStyle='#ffffe0'//-----地の色で描画しておかないとなぜか色が重なってしまう			fillRoundRect(context, bx, by, 43, 28, 5);			context.fillStyle = 'rgba(0, 255, 0, 0.3)';			fillRoundRect(context, bx, by, 43, 28, 5);						context.fillStyle = 'blue';			context.font = "18px Arial";			context.fillText(mm[num],8+8+(num-15)*45,24+260+28);			}		},300);	}}//-----実線にもどすfunction rline(){		context.beginPath();		context.setLineDash([]);		context.closePath();}function bgcolor(){	context.fillStyle='#ffffe0'//'rgba(0, 255, 0, 0.5)'	context.fillRect(0,0,500,320);}function bgcolor_bm(){	context.fillStyle='#ffffe0'//'rgba(0, 255, 0, 0.5)'	context.fillRect(290,40,230,180);}//------マル四角を描画するfunction-----//------https://qiita.com/PG0721/items/6fb9e9c02675be832402---よりfunction fillRoundRect(context, x, y, w, h, r) {    createRoundRectPath(context, x, y, w, h, r);    context.fill();}function createRoundRectPath(context, x, y, w, h, r) {    context.beginPath();    context.moveTo(x + r, y);    context.lineTo(x + w - r, y);    context.arc(x + w - r, y + r, r, Math.PI * (3/2), 0, false);    context.lineTo(x + w, y + h - r);    context.arc(x + w - r, y + h - r, r, 0, Math.PI * (1/2), false);    context.lineTo(x + r, y + h);           context.arc(x + r, y + h - r, r, Math.PI * (1/2), Math.PI, false);    context.lineTo(x, y + r);    context.arc(x + r, y + r, r, Math.PI, Math.PI * (3/2), false);    context.closePath();}//------マル四角を描画するfunctionここまで-----//----Canvas全体をクリアするfunctionfunction cls(){	context.clearRect(0,0,canvas.width,canvas.height);}//-----ここからマウスの位置を取得するcanvas.addEventListener(E_TOUCHSTART, onTouchStart);	function onTouchStart(e) {	canvas.addEventListener(E_TOUCHMOVE, onTouchMove);	canvas.addEventListener(E_TOUCHEND, onTouchEnd);}function onTouchMove(e) {	//cls();}function onTouchEnd(e) {	canvas.removeEventListener(E_TOUCHMOVE, onTouchMove);	canvas.removeEventListener(E_TOUCHEND, onTouchEnd);	mx=e.pageX;	my=e.pageY;		main();console.log("x= "+mx+" : y= "+my)//------コンソールに座標を表示console.log("bx= "+bx+" : by= "+by)//console.log("stnr="+stnr+" : edn="+edn)//console.log("bmoji[0]= "+bmoji[0]+" : bmoji[1]= "+bmoji[1]+" : bmoji[2]= "+bmoji[2])//console.log("ch0= "+ch0+" : ch1= "+ch1+" : ch2= "+ch2)}// デフォルトのイベントを禁止	document.ontouchmove = function(evt){	evt.preventDefault();	}}//-------最終かっこ>>>function draw(id) { 