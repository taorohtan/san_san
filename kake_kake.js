/*---------------iOSの場合は，マウスイベントをタッチイベントに変更することmousedown --> touchstartmousemove --> touchmovemouseup   --> touchend or touchevent以前の注意書きver.08問題作成　→　出題答え判定までできている二ケタ入力の判定正誤判定スタート設定（段数・くりかえし）	st=0;スタート	st=1;連続スタート	st=2;起動時の未定義データの表示抑制判断のぼり九九・くだり九九乱数発生リセット(画面をクリアするだけ・問題が出てしまう）モードキー着色正答数表示テンキー[0]を中央にする判定で × を表示しない[R]キー設定----------------*/// ----------------タッチイベントが利用可能かの判別-------------------------var supportTouch = 'ontouchend' in document;// イベント名var E_TOUCHSTART = supportTouch ? 'touchstart' : 'mousedown';var E_TOUCHMOVE = supportTouch ? 'touchmove' : 'mousemove';var E_TOUCHEND = supportTouch ? 'touchend' : 'mouseup';//=====================================================================function draw(id) {    var canvas = document.getElementById(id);    if (canvas == null)    	return false;		var context = canvas.getContext('2d');var mx;var my;var bx;var by;var num;//-------ten_keyからの入力数字var st;st=2;var dansu;var updn;updn=1;var sk=[];var sm=[];var kake1;var kotae;var seito;//-----正答数var matigai;//-----誤答数seito=0;matigai=0;var keta;var keta10;keta10=0;var jjketa;jjketa=0;var kk;//--------問題を進めるカウンタ・ten_keyクリックで加算kk=0;var i;var k;var ran=[];var dam;var jjrnd;const pinp = new Audio('pinpon.mp3');const bu = new Audio("bubu.mp3");	bgcolor();	ten_key();	ten_cold();	if(kk==0){msg00();msg01('blue');msg03()}function main(){if (typeof num == "undefined") {			swch=1;			st=2;			seito=0;			matigai=0;			bgcolor();			ten_key();			ten_cold();			msg00();			msg01('red');msg03();		}else{			if (swch==0 && swj==0){ms00 = Date.now()}		if (swch==0){Tm()}		nyuryoku();//------入力		swj++;		if (st==2){dansu=num;ten_color();ten_cold()}		if (st==0){			bgcolor();			ten_key();			mondai();			kk=0;			syutudai();			st=1;		}else{			if(st==2){			//-----表示しない			} else {			if(((mx>0 && mx<240) && (my>340 && my<460)) || (mx>80 && mx<160) && (my>460 && my<500)){hantei();}//-----正誤判定			if(kk==8){kk=0;st=2;}			kk++;			syutudai();			if(st==2){msg01('blue');msg02();swch=1;ttm=ttm+stp}						//-----テンキー押下時の色づけ			ten_color();			}		}	}}function pinbu (a,b){	var a;//---0:pinpon 1:bu	var b;//---音量　0-1(0.5)	if (a==0) {		pinp.volume = b;		pinp.play();		} else {		bu.volume = b;		bu.play();		}}function msg00(){		context.fillStyle = 'blue';		context.font = "18px Arial";		context.fillText("◎タップしてえらぶ", 35,315-20*12);		//context.fillText("", 35,315-20*8);		context.fillText(" [ ↑ ]　のぼり九九", 35,315-20*11);		context.fillText(" [ ↓ ]　くだり九九", 35,315-20*10);		context.fillText(" [ r ]　バラバラ九九", 35,315-20*9);		//context.fillText("", 35,315-20*5);		context.fillText(" [ c ]　あっていた数", 35,315-20*7);		context.fillText(" [ R ]　リセット", 35,315-20*6);		//context.fillText("だん数をえらんで [ S ] をタップ", 35,355);}function msg01(c){		var c;		context.fillStyle = c;		context.font = "18px Arial";		context.fillText("だん数をタップ → [ S ] をタップ", 17,315);}function msg02(){		context.fillStyle = 'blue';		context.font = "18px Arial";		context.fillText("くりかえしは [ S ] をタップ", 35,335);}function msg03(){		context.fillStyle ='rgba(255, 0, 0, 0.5)'//'red';		context.font = "18px Arial";		context.fillText("======================", 35,225);		context.fillText("======================", 35,285);		context.fillStyle = 'blue';		//context.font = "18px Arial";		//context.fillText("======================", 35,225);		context.fillText("答えのまちがいに気づいたら", 35,245);		context.fillText("画面のまん中をタップします", 35,265);		//context.fillText("======================", 35,285);}//--------------------問題作成function mondai(){	var i;		if (dansu<10) {kake1=dansu;}		if(updn==2){			random();		for (i=0; i<9; i++){			sm[i] = (kake1)+" × "+ran[i];			sk[i] = kake1*ran[i];		}		} else {		if(updn==1){		for (i=0; i<9; i++){			sm[i] = (kake1)+" × "+(1+i)			sk[i] = kake1*(1+i);		} 	} else {		for (i=0; i<9; i++){			sm[8-i] = (kake1)+" × "+(1+i)			sk[8-i] = kake1*(1+i);		}	}	}}//--------------------出題function syutudai(){	kotae = sk[kk];	if (kotae<10) {keta=1;} else {keta=2;}//------積の桁数判断	context.fillStyle = 'blue';	context.font = "28px Arial";	context.fillText(sm[kk], 60,50+kk*30);		ten_cold();//-----九九タイプのマーク}//--------------------入力function nyuryoku(){	if(my>340){		if (keta==1){jjketa=1;}		if (keta==2 && keta10==0) {keta10=num*10; kk--; jjketa=0;} else {num=keta10+num; keta10=0; jjketa=1;}	}else{}}//--------------------入力ここまで//--------------------解答判定function hantei(){		if (kotae == num){			context.fillStyle = 'red';			context.font = "48px Arial";			context.fillText("◯", 210,55+kk*30);			pinbu(0,0.5);						context.fillStyle = 'blue';			context.font = "28px Arial";			context.fillText(" =  "+sk[kk], 130,50+kk*30);			jjketa=0;			seito++;					} else {			if (jjketa==1){			context.fillStyle = 'red';			context.font = "24px Arial";			context.fillText(+num, 220,50+kk*30);//---間違い入力を表示			pinbu(1,0.5);						context.font = "28px Arial";			context.fillText(" =  "+kotae, 130,50+kk*30);			jjketa=0;			matigai++;			} else {			//----なにもしない			}		}}//--------------------乱数function random(){ran[0]=Math.floor(Math.random() * 9) + 1 ;k=1;while(k<=8){	jjrnd=0;	dam=Math.floor(Math.random() * 9) + 1 ;	for (i=0; i<k; i++){if (ran[i]==dam){jjrnd=1;}}	if (jjrnd==1) { } else {ran[i]=dam; k++;}	}}function bgcolor(){	context.fillStyle='#ffffe0'//'rgba(0, 255, 0, 0.5)'	context.fillRect(0,0,320,500);}function time_color(){	context.fillStyle='#ffffe0'//'rgba(0, 255, 0, 0.5)'	context.fillRect(0,0,200,28);}		//-----テンキー押下時の着色関数function ten_color(){	context.fillStyle='rgba(0, 255, 0, 0.5)';	if(((mx>0 && mx<240) && (my>340 && my<460)) || (mx>80 && mx<160) && (my>460 && my<500)){		fillRoundRect(context, bx, by, 78, 38, 5);				//---以下で0.5秒( 500 )まち色づけをなくす（もとの色で再描画 0〜9 ）		setTimeout(function(){		//ten_key();		context.fillStyle='#afeeee'//-----'rgba(0, 255, 0, 0.5)';				if(((mx>0 && mx<240) && (my>340 && my<460)) || (mx>80 && mx<160) && (my>460 && my<500)){		fillRoundRect(context, bx, by, 78, 38, 5);}		context.fillStyle = 'blue';		context.font = "24px Arial";		context.fillText("0",112,488);		for(i=0; i<3; i++){			for(j=0; j<3; j++){			context.fillText(j*3+i+1,32+i*80,448-j*40);//-----1〜9まで表示			}		}		},500);	}}function ten_cold(){	if(updn==1){context.fillStyle='rgba(255, 125, 0, 0.3)';fillRoundRect(context,240,340,78,38,5);}	if(updn==0){context.fillStyle='rgba(255, 125, 0, 0.3)';fillRoundRect(context,240,380,78,38,5);}	if(updn==2){context.fillStyle='rgba(255, 125, 0, 0.3)';fillRoundRect(context,240,420,78,38,5);}}function ten_key(){	var i;	var j;	context.fillStyle='#afeeee'	for(i=0; i<4; i++){		for (j=0; j<4; j++){			fillRoundRect(context,　i*80,340+j*40, 78, 38, 5);		}	}	//-----テンキー表示-----	context.fillStyle = 'blue';	context.font = "24px Arial";	context.fillText("0",112,488);	for(i=0; i<3; i++){		for(j=0; j<3; j++){		context.fillText(j*3+i+1,32+i*80,448-j*40);//-----1〜9まで表示		}	}	context.fillText("↑",32+3*80,488-3*40);	context.fillText("↓",32+3*80,488-2*40);	context.fillText("r",32+3*80,488-40);	context.fillText("S",32+3*80,488);	context.fillText("c",32+2*80,488);	context.fillText("R",32,488);}function ten_key_basyo(){	if((mx>0 && mx<320) && (my>340 && my<500)){			if((mx>240 && mx<320) && (my>340 && my<380)){updn=1;}//--- ↑		if((mx>240 && mx<320) && (my>380 && my<420)){updn=0;}//--- ↓		if((mx>240 && mx<320) && (my>420 && my<460)){updn=2;}//--- r				if((mx>240 && mx<320) && (my>460 && my<500)){			if(num=="" || num==0){msg01('red')}else{				if(num>0){num='';kk--}				//if (num>9){num=Number(String(num).substr(-1,1));}				msg01('red');st=0;swch=0;swj=0;}//----------S ボタン			}					if((mx>160 && mx<240) && (my>460 && my<500)){//---c ボタン			//st=0;			bgcolor();			ten_key();			context.fillStyle = 'blue';			context.font = "32px Arial";			if (seito!=0){			context.fillText((seito)+" 問正解！", 60,150);			context.fillText("("+(seito+matigai)+" 問中)", 55,200);						if(String(num).length>1){num="";}//Number(String(num).substr(-1,1));}			w_time(ttm,60,250, 1);			msg01('blue');			}		}			if((mx>0 && mx<80) && (my>460 && my<500)){//---Rボタン			//st=0;			swch=1;			st=2;			ttm=0;			seito=0;			matigai=0;			bgcolor();			ten_key();			ten_cold();			num=undefined;			msg00();msg01('red');		}			if((mx>0 && mx<80) && (my>340 && my<380)){num=7;bx=0;by=340;}		if((mx>80 && mx<160) && (my>340 && my<380)){num=8;bx=80;by=340;}		if((mx>160 && mx<240) && (my>340 && my<380)){num=9;bx=160;by=340;}		if((mx>0 && mx<80)&&(my>380 && my<420)){num=4;bx=0;by=380;}		if((mx>80 && mx<160)&&(my>380 && my<420)){num=5;bx=80;by=380;}		if((mx>160 && mx<240)&&(my>380 && my<420)){num=6;bx=160;by=380;}		if((mx>0 && mx<80)&&(my>420 && my<460)){num=1;bx=0;by=420;}		if((mx>80 && mx<160)&&(my>420 && my<460)){num=2;bx=80;by=420;}		if((mx>160 && mx<240)&&(my>420 && my<460)){num=3;bx=160;by=420;}		if((mx>80 && mx<160)&&(my>460 && my<500)){num=0;bx=80;by=460;}				} else {	//-----ten_kyeの範囲外ではなにもしない	}}var stp;//---開始時刻と現在時刻との差var ms00;//---開始時刻var swch;var swj;var ttm=0;//---合計時間//====================================================function Tm(){//-----単純なストップウォッチ　ここから	//ms00 = Date.now();//Date.now()は現在時刻をミリ秒で示す//-----現在時刻取得と時計描画を、10ミリ秒ごとに実行する	setInterval(() => {		stp = Date.now() - ms00;//スタート時と現在の時間差		if(swch==0){		time_color();//---時間表示のためのマスク		context.fillStyle = 'red';		context.font = "20px Arial";		w_time(stp, 100, 20, 0);//---経過時間表示	}	}, 10);//-----単純なストップウォッチ　ここまで}//---function Tm()function w_time(tt,x,y,fg){		var tt;x;y;fg;		var m = Math.floor(tt / 60000);		var s = Math.floor(tt % 60000 / 1000);		var ms = tt % 1000;			m = ('0' + m).slice(-2); 		s = ('0' + s).slice(-2);		ms = ('0' + ms).slice(-2);		if(fg==0){context.fillText(m+"\'"+ s + "\""+ms, x, y);}		if(fg==1){context.fillText(m+"分"+ s + "秒", x, y);}}//====================================================//------マル四角を描画するfunction-----//------https://qiita.com/PG0721/items/6fb9e9c02675be832402---よりfunction fillRoundRect(context, x, y, w, h, r) {    createRoundRectPath(context, x, y, w, h, r);    context.fill();}function createRoundRectPath(context, x, y, w, h, r) {    context.beginPath();    context.moveTo(x + r, y);    context.lineTo(x + w - r, y);    context.arc(x + w - r, y + r, r, Math.PI * (3/2), 0, false);    context.lineTo(x + w, y + h - r);    context.arc(x + w - r, y + h - r, r, 0, Math.PI * (1/2), false);    context.lineTo(x + r, y + h);           context.arc(x + r, y + h - r, r, Math.PI * (1/2), Math.PI, false);    context.lineTo(x, y + r);    context.arc(x + r, y + r, r, Math.PI, Math.PI * (3/2), false);    context.closePath();}//------マル四角を描画するfunctionここまで-----//----Canvas全体をクリアするfunctionfunction cls(){	context.clearRect(0,0,canvas.width,canvas.height);}//-----ここからマウスの位置を取得するcanvas.addEventListener(E_TOUCHSTART, onTouchStart);	function onTouchStart(e) {	canvas.addEventListener(E_TOUCHMOVE, onTouchMove);	canvas.addEventListener(E_TOUCHEND, onTouchEnd);}function onTouchMove(e) {	//cls();}function onTouchEnd(e) {	canvas.removeEventListener(E_TOUCHMOVE, onTouchMove);	canvas.removeEventListener(E_TOUCHEND, onTouchEnd);	mx=e.pageX;	my=e.pageY;	ten_key();	ten_key_basyo();	if(my>340){main();}	if(my<340){num="";keta10=0;ten_cold();}console.log("x= "+mx+" : y= "+my+" : num="+num+" : dansu="+dansu+" : kake1="+kake1)	}//	}	//----ここまで// デフォルトのイベントを禁止	document.ontouchmove = function(evt){	evt.preventDefault();	}}