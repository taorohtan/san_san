// ----------------タッチイベントが利用可能かの判別-------------------------var supportTouch = 'ontouchend' in document;// イベント名var E_TOUCHSTART = supportTouch ? 'touchstart' : 'mousedown';var E_TOUCHMOVE = supportTouch ? 'touchmove' : 'mousemove';var E_TOUCHEND = supportTouch ? 'touchend' : 'mouseup';//=====================================================================function draw(id) {    var canvas = document.getElementById(id);    if (canvas == null)    	return false;		var context = canvas.getContext('2d');var mx;var my;var i;var j;var c;c=0;var num;var non;var ran=[];var jjrnd;var k;var dam;var no;//---乱数の配列var bnum;var knum;var kan=[];var monjj;monjj=0;const pinp = new Audio('pinpon.mp3');const bu = new Audio("bubu.mp3");bgcolor();iniset();ten_key();dai();//-----main()function main(){	iniset();	ten_key();	ten_key_basyo();	dai();	select();}//------main()//=====number ↓function iniset(){//-----桁枠表示	context.strokeStyle = "blue";	for (i=0; i<8; i++){	if (i<4) {		context.strokeRect(40+54*i,50,54,85);		} else {		context.strokeRect(40+54*i,50,54,120);		}	}		context.moveTo(40,100);		context.lineTo(472,100);		//context.strokeStyle=c;		context.stroke();context.fillStyle = 'rgba(255, 255, 255, 0.3)'context.fillRect(40,100,54,70/2);context.fillRect(40+4*54,100,54,70);context.fillStyle = 'rgba(0, 0, 255, 0.3)'context.fillRect(94,100,54,70/2);context.fillRect(94+4*54,100,54,70);context.fillStyle = 'rgba(255, 255, 0, 0.3)'context.fillRect(148,100,54,70/2);context.fillRect(148+4*54,100,54,70);context.fillStyle = 'rgba(255, 0, 0, 0.3)'context.fillRect(202,100,54,70/2);context.fillRect(202+4*54,100,54,70);		context.fillStyle = 'blue';		context.font = "20px Arial";		context.fillText("千",60,125);		context.fillText("百",114,125);		context.fillText("十",168,125);		context.fillText("一",222,125);		context.fillText("千",276,125);		context.fillText("百",330,125);		context.fillText("十",384,125);		context.fillText("一",438,125);		context.fillText("万",222,160);context.fillStyle = 'rgba(0, 255, 0, 0.3)'context.fillRect(40,135,216,35)context.strokeStyle = "blue";context.strokeRect(40, 135, 216,35);}function kazu(){	bnum=ran[0]*10000000+ran[1]*1000000+ran[2]*100000+ran[3]*10000+ran[4]*100+ran[5]*100+ran[6]*10+ran[7];	//context.fillStyle = 'blue';	//context.font = "35px Arial";	//context.fillText(bnum,120,285);		for (i=0; i<=8; i++) kansj();	knum=kan[0]+kan[1]+kan[2]+kan[3]+kan[4]+kan[5]+kan[6]+kan[7];	context.fillStyle = 'blue';	context.font = "26px Arial";	context.fillText(knum,90,220);}function kansj(){var tan;		if (i==0) tan="千";	if (i==1) tan="百";	if (i==2) tan="十";	if (i==3) tan="万";	if (i==4) tan="千";	if (i==5) tan="百";	if (i==6) tan="十";	if (i==7) tan="";		if (ran[i]==0) if(i==3){kan[i]="万";}else{kan[i]="";}	if (ran[i]==1) if(i==1 || i==2 || i==4 || i==5 || i==6) {kan[i]=tan;}else{kan[i]="一"+tan;}	if (ran[i]==2) kan[i]="二"+tan;	if (ran[i]==3) kan[i]="三"+tan;	if (ran[i]==4) kan[i]="四"+tan;	if (ran[i]==5) kan[i]="五"+tan;	if (ran[i]==6) kan[i]="六"+tan;	if (ran[i]==7) kan[i]="七"+tan;	if (ran[i]==8) kan[i]="八"+tan;	if (ran[i]==9) kan[i]="九"+tan;}function pketa(){		context.fillStyle = 'red';		context.font = "30px Arial";		context.fillText(ran[0],60,90);		context.fillText(ran[1],114,90);		context.fillText(ran[2],168,90);		context.fillText(ran[3],222,90);		context.fillText(ran[4],276,90);		context.fillText(ran[5],330,90);		context.fillText(ran[6],384,90);		context.fillText(ran[7],438,90);	/*	var n;	var a;	var b;//桁をずらず b*84	for (n=0; n<a; n++){		context.beginPath();		if (n<5){		context.arc(70+b*84,180-n*28,10,0,2*Math.PI,false);		} else {		context.arc(70+b*84+25,180-(n-5)*28,10,0,2*Math.PI,false);		}		context.fillStyle='rgba(255, 0, 0, 1)';		context.fill();		}rline()//---空◯がでないおまじない（実線にもどす）*/}function dai(){		context.fillStyle = 'blue';		context.font = "18px Arial";		context.fillText( "数字　を使ってノートに書きましょう", 80,40);		context.fillStyle='rgba(255, 0, 0, 0.1)'		//context.strokeRect(80,18,300,30);		context.fillRect(60,18,380,30);}//=====numberfunction random(){ran[0]=Math.floor(Math.random() * 9) + 1 ;k=1;while(k<=8){	jjrnd=0;	dam=Math.floor(Math.random() * 9) //+ 1 ;	for (i=0; i<k; i++){if (ran[i]==dam){jjrnd=1;}}	if (jjrnd==1) { } else {ran[i]=dam; k++;}	}}function pinbu (a,b){	var a;	var b;	if (a==0) {		pinp.volume = b;		pinp.play();		} else {		bu.volume = b;		bu.play();		}}//-----　← M A N 押下時の処理function select(){	if((mx>184 && mx<500) && (my>260 && my<320)){			if(num==11){			c=c+1;			bgcolor();			iniset();			ten_key();			dai();			random();					non=Math.floor(Math.random() * 4) +1;	//console.log(non)	if (non==4){}	if (non==3){if(ran[1]!=0){ran[0]="";}}	if (non==2){if(ran[2]!=0){ran[0]="";ran[1]="";}}	if (non==1){if(ran[3]!=0){ran[0]="";ran[1]="";ran[2]="";}}			//pketa();			context.fillStyle = 'blue';			context.font = "30px Arial";			context.fillText("（"+c+"）",5,220);			kazu();		}						if(num==12){}		if(num==13){			bgcolor();			iniset();			ten_key();			dai();						pketa();			context.fillStyle = 'blue';			context.font = "30px Arial";			context.fillText("（"+c+"）",5,220);						kazu();			//if (monjj==1){c=c+1;monjj=0;}else{c=c;}		}		if(num==14){//-----次の問題			bgcolor();			iniset();			ten_key();			dai();			c=0;		}	}}//-----テンキー表示function ten_key(){		//bgcolor_btm();		context.fillStyle='#afeeee';		//fillRoundRect(context,　10,260, 23, 28, 5);				for(i=0; i<2; i++){			for(j=0; j<2; j++){				context.fillStyle='#afeeee'				fillRoundRect(context,　225+184+i*45,260+j*30, 43, 28, 5);				/*				if (i<5){					context.fillStyle = 'blue';					context.font = "24px Arial";					if(j==0){context.fillText(i+1,194+4+i*45,24+260+j*28);}						else{if(i==4){context.fillText(i-4,194+4+i*45,24+260+j*28);}						else{context.fillText(i+6,194+4+i*45,24+260+j*28);}}					} else {}					*/			}		}				context.fillStyle = 'blue';		context.font = "20px Arial";		context.fillText("問",194+5*45,24+260);		//context.fillText("S",194+6*45,24+260);		context.fillText("答",194+5*45,24+260+28);		context.font = "14px Arial";		context.fillText("（1）",185+6*45,24+260+28);}//-----テンキー押下時の値取得function ten_key_basyo(){	rline();//点線丸囲いが描かれてしまうので入れておく	/*	if((mx>184 && mx<229) && (my>260 && my<290)){num=1;}	if((mx>229 && mx<274) && (my>260 && my<290)){num=2;}	if((mx>274 && mx<319) && (my>260 && my<290)){num=3;}	if((mx>319 && mx<360) && (my>260 && my<290)){num=4;}	if((mx>360 && mx<405) && (my>260 && my<290)){num=5;}	*/	if((mx>405 && mx<450) && (my>260 && my<290)){num=11;}	if((mx>450 && mx<495) && (my>260 && my<290)){num=12;}	/*	if((mx>184 && mx<229) && (my>290 && my<320)){num=6;}	if((mx>229 && mx<274) && (my>290 && my<320)){num=7;}	if((mx>274 && mx<319) && (my>290 && my<320)){num=8;}	if((mx>319 && mx<360) && (my>290 && my<320)){num=9;}	if((mx>360 && mx<405) && (my>290 && my<320)){num=0;}	*/	if((mx>405 && mx<450) && (my>290 && my<320)){num=13;}	if((mx>450 && mx<495) && (my>290 && my<320)){num=14;}}//-----実線にもどすfunction rline(){		context.beginPath();		context.setLineDash([]);		context.closePath();}function bgcolor(){	context.fillStyle='#ffffe0'//'rgba(0, 255, 0, 0.5)'	context.fillRect(0,0,500,320);}function bgcolor_bm(){	context.fillStyle='#ffffe0'//'rgba(0, 255, 0, 0.5)'	context.fillRect(290,40,230,180);}//------マル四角を描画するfunction-----//------https://qiita.com/PG0721/items/6fb9e9c02675be832402---よりfunction fillRoundRect(context, x, y, w, h, r) {    createRoundRectPath(context, x, y, w, h, r);    context.fill();}function createRoundRectPath(context, x, y, w, h, r) {    context.beginPath();    context.moveTo(x + r, y);    context.lineTo(x + w - r, y);    context.arc(x + w - r, y + r, r, Math.PI * (3/2), 0, false);    context.lineTo(x + w, y + h - r);    context.arc(x + w - r, y + h - r, r, 0, Math.PI * (1/2), false);    context.lineTo(x + r, y + h);           context.arc(x + r, y + h - r, r, Math.PI * (1/2), Math.PI, false);    context.lineTo(x, y + r);    context.arc(x + r, y + r, r, Math.PI, Math.PI * (3/2), false);    context.closePath();}//------マル四角を描画するfunctionここまで-----//----Canvas全体をクリアするfunctionfunction cls(){	context.clearRect(0,0,canvas.width,canvas.height);}//-----ここからマウスの位置を取得するcanvas.addEventListener(E_TOUCHSTART, onTouchStart);	function onTouchStart(e) {	canvas.addEventListener(E_TOUCHMOVE, onTouchMove);	canvas.addEventListener(E_TOUCHEND, onTouchEnd);}function onTouchMove(e) {	//cls();}function onTouchEnd(e) {	canvas.removeEventListener(E_TOUCHMOVE, onTouchMove);	canvas.removeEventListener(E_TOUCHEND, onTouchEnd);	mx=e.pageX;	my=e.pageY;		main();	ten_key_basyo();			console.log("x= "+mx+" : y= "+my)//------コンソールに座標を表示}// デフォルトのイベントを禁止	document.ontouchmove = function(evt){	evt.preventDefault();	}}//-------最終かっこ>>>function draw(id) { 